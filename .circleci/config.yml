version: 2

defaults: &defaults
  docker:
    - image: circleci/openjdk:8u232-jdk-stretch
  resource_class: medium
  environment: &defaults-environment
    TERM: dumb

all-branches-and-tags: &all-branches-and-tags
  filters:
    # run on all branches and tags
    tags:
      only: /.*/

deployable-branches-and-tags: &deployable-branches-and-tags
  filters:
    tags:
      only: /[0-9]+(?:\.[0-9]+){2,}-palantir\.[0-9]+(?:\.[0-9]+)*/
    branches:
      only: master

# Step templates

step_templates:
  restore-build-binaries-cache: &restore-build-binaries-cache
    restore_cache:
      keys:
        - build-binaries-{{ checksum "build/mvn" }}
        - build-binaries-
  restore-maven-dependency-cache: &restore-maven-dependency-cache
    restore_cache:
      keys:
        - maven-dependency-cache-{{ checksum "pom.xml" }}
        # Fallback - see https://circleci.com/docs/2.0/configuration-reference/#example-2
        - maven-dependency-cache-

jobs:
  run-tests:
    <<: *defaults
    steps:
      - checkout
      - *restore-maven-dependency-cache
      - *restore-build-binaries-cache
      - run: sudo apt-get update && sudo apt-get install libssl-dev
      - run:
          name: Run all tests
          command: ./build/mvn -B test
          no_output_timeout: 15m
      - save_cache:
          key: build-binaries-{{ checksum "build/mvn" }}
          paths:
            - "build"
      - save_cache:
          key: maven-dependency-cache-{{ checksum "pom.xml" }}
          paths:
            - "~/.m2"
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex "./target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

  build-osx:
    macos:
      xcode: "11.1.0"
    environment:
      TERM: dumb
      JAVA_HOME: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
    steps:
      - checkout
      - run: ./build/mvn -B process-classes
      - persist_to_workspace:
          root: target/classes/org/apache/commons/crypto/native/Mac/
          paths:
            - '*'

  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: target/classes/org/apache/commons/crypto/native/Mac/
      - *restore-maven-dependency-cache
      - *restore-build-binaries-cache
      - run: sudo apt-get update && sudo apt-get install libssl-dev
      - run: echo "<settings><servers><server>" > settings.xml
      - run: echo "<id>bintray-palantir-release</id><username>$BINTRAY_USERNAME</username>" >> settings.xml
      - run: echo "<password>$BINTRAY_PASSWORD</password>" >> settings.xml
      - run: echo "</server></servers></settings>" >> settings.xml
      - deploy:
          name: Deploy all the things
          command: ./build/mvn versions:set -DnewVersion=`git describe --tags --first-parent` && ./build/mvn -T1C --settings settings.xml -DskipTests install

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - run-tests:
          <<: *all-branches-and-tags
      - build-osx:
          <<: *deployable-branches-and-tags
      - deploy:
          requires:
            - run-tests
            - build-osx
          <<: *deployable-branches-and-tags
